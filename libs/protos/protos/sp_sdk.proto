syntax = "proto3";

package protos;

option go_package = "github.com/streamdal/streamdal/libs/protos/build/go/protos";

enum AbortStatus {
  ABORT_STATUS_UNSET = 0;
  ABORT_STATUS_CURRENT = 1;
  ABORT_STATUS_ALL = 2;
}

// Common return response used by all SDKs
message SDKResponse {
  // Contains (potentially) modified input data
  bytes data = 1;

  // Indicates if .Process() was successful; check error_message for more details
  bool error = 2;

  // If an error == true, this will contain a human-readable error message
  string error_message = 3;

  // An array of pipelines that the SDK executed and the status of each step
  repeated PipelineStatus pipeline_status = 4;

  // Includes any metadata that the step(s) may want to pass back to the user.
  //
  // NOTE: Metadata is aggregated across all steps in the pipeline, so if two
  // steps both set a key "foo" to different values, the value of "foo" in the
  // response will be the value set by the last step in the pipeline.
  //
  // To learn more about "metadata", see SDK Spec V2 doc "Pipeline Step & Error
  // Behavior" section.
  map<string, string> metadata = 5;
}

message PipelineStatus {
  // ID of the pipeline
  string id = 1;

  // The name of the pipeline
  string name = 2;

  // The status of each step in the pipeline
  repeated StepStatus step_status = 3;
}

message StepStatus {
  // The name of the step
  string name = 1;

  // Did an error occur during the step?
  bool error = 2;

  // If error == true, this will contain a human-readable error message
  string error_message = 3;

  // Indicates if current or upcoming pipeline has been aborted. Err does NOT
  // mean that the pipeline was aborted - on_error conditions have to be defined
  // explicitly for each step.
  AbortStatus abort_status = 4;
}
