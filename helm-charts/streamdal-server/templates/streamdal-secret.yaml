{{- if not (lookup "v1" "Secret" .Release.Namespace "streamdal-server-aes-key") }}
apiVersion: v1
kind: Secret
metadata:
  name: "streamdal-server-aes-key"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
 # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "streamdal-server-aes-key") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $streamdalSecret to existing secret data or generate a random one when not exists
  {{- $streamdalSecret := (get $secretData "streamdal-server-aes-key") | default (randAlphaNum 65 | sha256sum | b64enc) }}
  STREAMDAL_SERVER_AES_KEY: {{ .Values.streamdalServerAesKey | default (randAlphaNum 65) | sha256sum | quote }}
{{- end }}
