AWSTemplateFormatVersion: "2010-09-09"
Description: "The template used to create an ECS Service from the ECS Console."
Parameters:
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-075fce0b4612bd7dd
  SubnetID:
    Type: String
    Default: subnet-0a1f93cbd6ed02a25
  VpcID:
    Type: String
    Default: vpc-0ad11cd6c0291c485
  LoadBalancerName:
    Type: String
    Default: ""
Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: streamdal-stack

  ServiceDiscoveryNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Description: "Namespace for ECS services"
      Name: "local"
      Vpc: !Ref VpcID

  # Redis Task Definition
  RedisTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: redis-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      ContainerDefinitions:
        - Name: redis-container
          Image: redis:latest
          Command: ["redis-server", "--appendonly", "yes"]
          PortMappings:
            - ContainerPort: 6379
      RequiresCompatibilities:
        - EC2
        - FARGATE

  # Redis Service
  RedisService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: redis-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref RedisTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetID
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId

  # Updated Streamdal Server Task Definition
  StreamdalServerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: streamdal-server-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      ContainerDefinitions:
        - Name: streamdal-server-container
          Image: streamdal/server:0.0.4-4e4bdb8
          EntryPoint: ["/bin/bash", "/entrypoint.sh"]
          Environment:
            - Name: STREAMDAL_SERVER_AUTH_TOKEN
              Value: 1234
            - Name: STREAMDAL_SERVER_REDIS_URL
              Value: redis.local:6379
          PortMappings:
            - ContainerPort: 8081
            - ContainerPort: 8082
      RequiresCompatibilities:
        - EC2
        - FARGATE

  # Streamdal Server Service
  StreamdalServerService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: streamdal-server-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref StreamdalServerTaskDefinition
      DesiredCount: 3
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetID
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId

  # Updated Streamdal Console Task Definition
  StreamdalConsoleTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: streamdal-console-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      ContainerDefinitions:
        - Name: streamdal-console-container
          Image: streamdal/console:0.0.6
          Environment:
            - Name: STREAMDAL_CONSOLE_GRPC_WEB_URL
              Value: http://envoy.local:8083
            - Name: STREAMDAL_CONSOLE_GRPC_AUTH_TOKEN
              Value: 1234
            - Name: STREAMDAL_CONSOLE_PORT
              Value: 8080
            - Name: STREAMDAL_CONSOLE_PRODUCTION
              Value: "true"
          PortMappings:
            - ContainerPort: 8080
      RequiresCompatibilities:
        - EC2
        - FARGATE

  # Envoy Service Discovery
  EnvoyServiceDiscovery:
    Type: 'AWS::ServiceDiscovery::Service'
    Properties:
      Description: Service discovery for Envoy
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
        RoutingPolicy: WEIGHTED
      Name: envoy
      NamespaceId: !Ref ServiceDiscoveryNamespace

  # Envoy Task Definition
  EnvoyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: envoy-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      ContainerDefinitions:
        - Name: envoy-container
          Image: envoyproxy/envoy:tools-v1.28.0
          PortMappings:
            - ContainerPort: 8083
      RequiresCompatibilities:
        - EC2
        - FARGATE

  # Envoy Service
  EnvoyService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: envoy-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref EnvoyTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetID
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId

  # Container Security Group
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcID
      GroupName: StreamdalSecurityGroup
      GroupDescription: Security group for Streamdal containers
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8082
          ToPort: 8082
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8083
          ToPort: 8083
          CidrIp: 0.0.0.0/0

  # EFS FileSystem
  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose
      Encrypted: true
      LifecyclePolicies:
        - TransitionToIA: AFTER_7_DAYS
      ThroughputMode: bursting

  # EFS Security Group
  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EFS Security Group
      VpcId: !Ref VpcID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '2049'
          ToPort: '2049'
          SourceSecurityGroupId: !GetAtt ContainerSecurityGroup.GroupId

  # EFS Mount Target
  EFSMountTarget:
    Type: "AWS::EFS::MountTarget"
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Ref SubnetID
      SecurityGroups:
        - !Ref EFSSecurityGroup

  # Streamdal Console Service
  StreamdalConsoleService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: streamdal-console-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref StreamdalConsoleTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetID
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

